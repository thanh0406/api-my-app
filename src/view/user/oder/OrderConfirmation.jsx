import { useLocation, useNavigate } from 'react-router-dom';
import './OrderConfirmation.css';

// H√†m ƒë·ªÉ l∆∞u d·ªØ li·ªáu v√†o localStorage v·ªõi th·ªùi gian h·∫øt h·∫°n
const saveOrderToLocalStorage = (orderData) => {
  const expirationTime = Date.now() + 15 * 60 * 1000; // 15 ph√∫t t√≠nh b·∫±ng milliseconds
  const orderWithExpiration = {
    ...orderData,
    expiresAt: expirationTime,
  };
  localStorage.setItem('tempOrder', JSON.stringify(orderWithExpiration));
};

// H√†m ƒë·ªÉ ki·ªÉm tra v√† x√≥a d·ªØ li·ªáu n·∫øu h·∫øt h·∫°n
const checkAndClearExpiredOrder = () => {
  const savedOrder = localStorage.getItem('tempOrder');
  if (savedOrder) {
    const { expiresAt } = JSON.parse(savedOrder);
    if (Date.now() > expiresAt) {
      localStorage.removeItem('tempOrder');
    }
  }
};

const OrderConfirmation = () => {
  const { state } = useLocation();
  const navigate = useNavigate();

  // Ki·ªÉm tra d·ªØ li·ªáu t·ª´ state ho·∫∑c localStorage
  let orderData = state;
  if (!orderData) {
    const savedOrder = localStorage.getItem('tempOrder');
    if (savedOrder) {
      const parsedOrder = JSON.parse(savedOrder);
      if (Date.now() <= parsedOrder.expiresAt) {
        orderData = parsedOrder;
      } else {
        localStorage.removeItem('tempOrder');
        return <div>Kh√¥ng c√≥ th√¥ng tin ƒë∆°n h√†ng</div>;
      }
    } else {
      return <div>Kh√¥ng c√≥ th√¥ng tin ƒë∆°n h√†ng</div>;
    }
  } else {
    // L∆∞u d·ªØ li·ªáu v√†o localStorage khi nh·∫≠n ƒë∆∞·ª£c t·ª´ state
    saveOrderToLocalStorage(orderData);
  }

  const { orderId, selectedItems, totalPrice, status } = orderData;

  // Ki·ªÉm tra v√† x√≥a d·ªØ li·ªáu h·∫øt h·∫°n
  checkAndClearExpiredOrder();

  return (
    <div className="confirmation-page">
      <div className="confirmation-header">
        <h2>X√°c nh·∫≠n ƒë∆°n h√†ng</h2>
      </div>

      <div className="confirmation-container">
        <div className="order-info">
          <p><strong>M√£ ƒë∆°n h√†ng:</strong> {orderId}</p>
          <p>
            <strong>Tr·∫°ng th√°i:</strong>
            <span className={`status-badge status-${status}`}>
              {status === 'pending' ? 'ƒêang x·ª≠ l√Ω' : 'Ho√†n t·∫•t'}
            </span>
          </p>
          <p><strong>T·ªïng ti·ªÅn:</strong> {totalPrice.toLocaleString()} VND</p>
          <p><strong>Ph∆∞∆°ng th·ª©c thanh to√°n:</strong> Ti·ªÅn m·∫∑t</p>
        </div>

        <table className="confirmation-table">
          <thead>
            <tr>
              <th>T√™n s·∫£n ph·∫©m</th>
              <th>Gi√°</th>
              <th>S·ªë l∆∞·ª£ng</th>
              <th>T·ªïng</th>
            </tr>
          </thead>
          <tbody>
            {selectedItems.map((item) => (
              <tr key={item.id}>
                <td>{item.name}</td>
                <td>{Number(item.price).toLocaleString()} VND</td>
                <td>{item.quantity}</td>
                <td>{(Number(item.price) * Number(item.quantity)).toLocaleString()} VND</td>
              </tr>
            ))}
          </tbody>
        </table>

        <div className="delivery-info">
          <div className="delivery-icon">üèçÔ∏è</div>
          <p>Shipper s·∫Ω giao h√†ng ƒë·∫øn b·∫°n trong th·ªùi gian s·ªõm nh·∫•t!</p>
          <p>Vui l√≤ng chu·∫©n b·ªã ti·ªÅn m·∫∑t ƒë·ªÉ thanh to√°n khi nh·∫≠n h√†ng.</p>
        </div>

        <div style={{ textAlign: 'center' }}>
          <button onClick={() => navigate('/')} className="home-btn">
            <i className="fas fa-home"></i>
            V·ªÅ trang ch·ªß
          </button>
        </div>
      </div>
    </div>
  );
};

export default OrderConfirmation;